<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Replicon Local AI Runner</title>
  <link rel="stylesheet" href="style.css" />
  <style>
    body.dark-mode { background: #23272e; color: #e5e5e5; }
    #container { max-width: 750px; margin: 2em auto; padding: 2em; border-radius: 14px; background: #fff; box-shadow: 0 2px 16px #0002;}
    body.dark-mode #container { background: #2d323c; }
    .output-render { border: 1px solid #bbb; background: #fafafa; min-height: 80px; padding: 1em; border-radius: 6px; font-family: monospace; }
    body.dark-mode .output-render { background: #22252b; color: #f3f3f3; border: 1px solid #333; }
    .statusbar { display: flex; gap: 1em; margin-bottom: 1em; font-size: .9em; }
    .status-ok { color: #2cc36b; }
    .status-missing { color: #ee3030; }
    .action-templates { display: flex; gap: 1em; margin-bottom: 1em; }
    .history-list { font-size: .97em; margin-top: 1em; }
    .history-list li { cursor: pointer; }
    .toast { position: fixed; z-index: 999; bottom: 30px; left: 50%; transform: translateX(-50%); background: #23272e; color: #fff; padding: 12px 24px; border-radius: 8px; box-shadow: 0 2px 10px #0004; font-size: 1.05em; opacity: 0; pointer-events: none; transition: opacity .3s; }
    .toast.show { opacity: 1; pointer-events: auto; }
    .spinner { display: inline-block; width: 28px; height: 28px; border: 4px solid #eee; border-top: 4px solid #0099ff; border-radius: 50%; animation: spin 1s linear infinite; margin-left: 10px; vertical-align: middle; }
    @keyframes spin { 100% { transform: rotate(360deg); } }
    .dark-toggle { float: right; margin-top: -3em; }
    .logo { font-size: 2em; letter-spacing: .1em; font-weight: 700; color: #0099ff; }
    .button-row, .test-buttons, .output-controls { margin: 12px 0; }
  </style>
</head>
<body>
  <div id="container">
    <span class="logo">Replicon AI Runner</span>
    <button class="dark-toggle" onclick="toggleDarkMode()">ðŸŒ— Dark Mode</button>
    <div class="statusbar" id="statusbar">Checking integrations...</div>

    <label for="actionType">Select Action Type:</label>
    <select id="actionType" onchange="showTemplates()">
      <option value="shell">Run Shell Command</option>
      <option value="python">Run Python</option>
      <option value="read">Read File</option>
      <option value="write">Write File</option>
      <option value="json">Run JSON</option>
    </select>
    <div class="action-templates" id="templates"></div>

    <label for="inputBox">Input:</label>
    <textarea id="inputBox" placeholder="Enter command, file path, or JSON payload here..."></textarea>

    <div class="button-row">
      <button onclick="submitToRunner()">ðŸš€ Submit to Runner</button>
      <button onclick="clearInput()">ðŸ§¹ Clear Input</button>
      <button onclick="clearOutput()">ðŸ§¹ Clear Output</button>
      <button onclick="openHelp()">ðŸ“– Help</button>
    </div>
    <div class="test-buttons">
      <button onclick="testFirebase()">âœ… Test Firebase</button>
      <button onclick="testGitHub()">âœ… Test GitHub</button>
      <button onclick="testVercel()">âœ… Test Vercel</button>
    </div>
    <div class="output-controls">
      <button onclick="copyOutput()">ðŸ“‹ Copy Output</button>
      <button onclick="saveOutputToFile()">ðŸ’¾ Save Output to File</button>
    </div>
    <label for="outputBox">Output:</label>
    <textarea id="outputBox" readonly></textarea>
    <div class="output-render" id="outputRender"></div>

    <div>
      <h3>History <small>(last 5)</small></h3>
      <ol class="history-list" id="historyList"></ol>
    </div>
    <div id="spinner" style="display:none;"><span class="spinner"></span> Working...</div>
  </div>
  <div id="toast" class="toast"></div>

  <script>
    // (All your logic untouched above, same as before...)

    // === SYSTEM CONTROL BUTTONS LOGIC (Keep ONLY this, delete the rest) ===
    document.getElementById('shutdownBackendBtn').onclick = async function() {
      try {
        const res = await fetch('http://localhost:3001/shutdown', { method: 'POST' });
        const data = await res.json();
        document.getElementById('outputBox').value += "\n[Backend] " + data.message;
      } catch (e) {
        document.getElementById('outputBox').value += "\n[Error]: Unable to contact backend for shutdown.";
      }
    };
    document.getElementById('restartBackendBtn').onclick = async function() {
      try {
        const res = await fetch('http://localhost:3001/restart', { method: 'POST' });
        const data = await res.json();
        document.getElementById('outputBox').value += "\n[Backend] " + data.message;
      } catch (e) {
        document.getElementById('outputBox').value += "\n[Error]: Unable to contact backend for restart.";
      }
    };
    document.getElementById('restartUiBtn').onclick = async function() {
      try {
        const res = await fetch('http://localhost:3001/restart-ui', { method: 'POST' });
        const data = await res.json();
        document.getElementById('outputBox').value += "\n[UI Server] " + data.message;
      } catch (e) {
        document.getElementById('outputBox').value += "\n[Error]: Unable to contact backend for UI server restart.";
      }
    };
    // --- End System Control Buttons Logic ---
  </script>
  <div class="button-row bottom-system-buttons">
    <button id="shutdownBackendBtn">Shutdown Backend</button>
    <button id="restartBackendBtn">Restart Backend</button>
    <button id="restartUiBtn">Restart UI</button>
  </div>
</body>
</html>
