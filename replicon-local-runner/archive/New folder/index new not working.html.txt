<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Replicon Local AI Runner</title>
  <link rel="stylesheet" href="style.css" />
  <style>
    /* ... your CSS unchanged ... */
  </style>
</head>
<body>
  <div id="container">
    <span class="logo">Replicon AI Runner</span>
    <button class="dark-toggle" onclick="toggleDarkMode()">ðŸŒ— Dark Mode</button>
    <div class="statusbar" id="statusbar">Checking integrations...</div>
    <!-- ...snip... -->
    <div class="test-buttons">
      <button onclick="testFirebase()">âœ… Test Firebase</button>
      <button onclick="testGitHub()">âœ… Test GitHub</button>
      <button onclick="testVercel()">âœ… Test Vercel</button>
    </div>
    <!-- === ADDED: Server Controls === -->
    <div class="server-controls" style="margin-bottom:12px;">
      <button id="shutdownBtn" style="background:#b22424;color:#fff;">Shutdown Backend</button>
      <button id="restartBtn" style="background:#1b5e20;color:#fff;">Restart Backend</button>
      <button id="restartUiBtn" style="background:#0074d9;color:#fff;">Restart UI Server</button>
    </div>
    <div class="output-controls">
      <button onclick="copyOutput()">ðŸ“‹ Copy Output</button>
      <button onclick="saveOutputToFile()">ðŸ’¾ Save Output to File</button>
    </div>
    <!-- ...rest of your file untouched... -->
    <label for="outputBox">Output:</label>
    <textarea id="outputBox" readonly></textarea>
    <div class="output-render" id="outputRender"></div>
    <div>
      <h3>History <small>(last 5)</small></h3>
      <ol class="history-list" id="historyList"></ol>
    </div>
    <div id="spinner" style="display:none;"><span class="spinner"></span> Working...</div>
  </div>
  <div id="toast" class="toast"></div>

  <!-- ...all your scripts unchanged until the end... -->

<script>
// === NEW: Server Control Buttons ===
document.getElementById('shutdownBtn').onclick = async function() {
  showSpinner(true);
  try {
    const res = await fetch('http://localhost:3001/shutdown', { method: 'POST' });
    const data = await res.json();
    document.getElementById('outputBox').value += "\n[Backend] " + data.message;
    pushHistory("[Server Control] Shutdown", data.message);
    renderOutput(data.message);
    showToast("Backend shutdown requested.");
  } catch (e) {
    document.getElementById('outputBox').value += "\n[Backend] Shutdown error.";
    showToast("Could not contact backend.", true);
  }
  showSpinner(false);
};
document.getElementById('restartBtn').onclick = async function() {
  showSpinner(true);
  try {
    const res = await fetch('http://localhost:3001/restart', { method: 'POST' });
    const data = await res.json();
    document.getElementById('outputBox').value += "\n[Backend] " + data.message;
    pushHistory("[Server Control] Restart", data.message);
    renderOutput(data.message);
    showToast("Backend restart requested.");
  } catch (e) {
    document.getElementById('outputBox').value += "\n[Backend] Restart error.";
    showToast("Could not contact backend.", true);
  }
  showSpinner(false);
};
document.getElementById('restartUiBtn').onclick = async function() {
  showSpinner(true);
  try {
    const res = await fetch('http://localhost:3001/restart-ui', { method: 'POST' });
    const data = await res.json();
    document.getElementById('outputBox').value += "\n[UI Server] " + data.message;
    pushHistory("[Server Control] Restart UI", data.message);
    renderOutput(data.message);
    showToast("UI server restart requested.");
  } catch (e) {
    document.getElementById('outputBox').value += "\n[UI Server] Restart error.";
    showToast("Could not contact backend.", true);
  }
  showSpinner(false);
};
</script>
</body>
</html>
